{"version":3,"sources":["svg4everybody.js","Chart.Core.js","Chart.Radar.js","chart.js"],"names":["root","factory","define","amd","svg4everybody","module","exports","this","embed","parent","svg","target","fragment","document","createDocumentFragment","viewBox","hasAttribute","getAttribute","setAttribute","clone","cloneNode","childNodes","length","appendChild","firstChild","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","_cachedTarget","_embeds","splice","map","item","id","getElementById","rawopts","oninterval","index","uses","use","parentNode","getSVGAncestor","src","polyfill","opts","validate","removeChild","srcSplit","split","url","shift","join","requests","XMLHttpRequest","open","send","push","requestAnimationFrame","Object","newerIEUA","webkitUA","olderEdgeUA","test","navigator","userAgent","match","window","setTimeout","getElementsByTagName","node","nodeName","toLowerCase","previous","Chart","context","canvas","ctx","computeDimension","element","dimension","defaultView","getComputedStyle","getPropertyValue","width","height","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","customTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipTitleTemplate","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","segmentColorDefault","segmentHighlightColorDefaults","onAnimationProgress","onAnimationComplete","types","each","loopable","callback","self","additionalArgs","Array","prototype","slice","call","arguments","i","apply","concat","obj","objClone","value","key","hasOwnProperty","extend","base","extensionObject","merge","master","args","unshift","indexOf","arrayToSearch","inherits","where","collection","filterCallback","filtered","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","constructor","Surrogate","__super__","noop","uid","warn","str","console","isNumber","n","isNaN","parseFloat","isFinite","max","array","Math","min","getDecimalPlaces","cap","valueToCap","maxValue","minValue","num","s","toString","parseInt","parts","toRadians","radians","degrees","PI","aliasPixel","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","x","distanceFromYCenter","y","radialDistanceFromCenter","sqrt","angle","atan2","distance","pixelWidth","calculateOrderOfMagnitude","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","val","floor","log","LN10","template","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","minSteps","maxSteps","skipFitting","values","v","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","templateString","valuesObject","tmpl","data","fn","Function","replace","cache","easingEffects","generateLabels","labelsArray","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","p","a","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","addEvent","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","left","clientY","top","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","unbindEvents","bindEvents","arrayOfEvents","events","eventName","chart","getMaximumWidth","domNode","container","padding","getStyle","clientWidth","getMaximumHeight","clientHeight","el","property","currentStyle","getMaximumSize","devicePixelRatio","style","scale","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","options","resize","initialize","stop","animationService","cancelAnimation","newWidth","newHeight","reflow","render","Animation","numSteps","easing","animationObject","draw","addAnimation","generateLegend","legendTemplate","destroy","removeProperty","removeAttribute","showTooltip","ChartElements","forceRedraw","activeElements","isChanged","Elements","changed","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xMax","yMax","xMin","yMin","xPositions","yPositions","dataset","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","custom","Element","tooltipPosition","Tooltip","caretHeight","text","toBase64Image","toDataURL","ChartType","name","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","pointRelativeAngle","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleHeight","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","label","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","startPoint","endPoint","cachedYLabelWidth","cachedEndPoint","cachedHeight","calculateYRange","calculateXLabelRotation","firstRotated","lastRotated","firstWidth","lastWidth","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","cosRotation","originalLabelWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","innerWidth","valueWidth","valueOffset","offsetGridLines","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","drawHorizontalLine","showHorizontalLines","gridLineWidth","gridLineColor","lineColor","xPos","linePos","isRotated","drawVerticalLine","showVerticalLines","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","pointPosition","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","largestPossibleRadius","pointLabelFontSize","furthestRight","furthestLeft","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","angleMultiplier","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","centerOffset","outerPosition","angleLineInterval","backgroundColors","previousOuterPosition","nextOuterPosition","previousOuterHalfway","nextOuterHalfway","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","frameDuration","animations","dropFrames","digestWrapper","animationWrapper","startDigest","startTime","Date","now","framesToDrop","endTime","delay","frameDelay","timeout","instance","noConflict","scaleShowLine","angleShowLineOut","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","buildScale","activePointsCollection","type","getPointsAtEvent","eachPoints","point","activePoint","highlightFill","highlightStroke","datasetObject","pointColor","pointStrokeColor","dataPoint","datasetLabel","pointHighlightFill","pointHighlightStroke","mousePosition","fromCenter","anglePerIndex","pointIndex","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackgroundColors","scaleBackdropPaddingY","scaleBackdropPaddingX","updateScaleRange","totalDataArray","scaleSizes","addData","datasetIndex","removeData","barCharts","querySelectorAll","forEach","skill","bar","textContent","getContext","Radar"],"mappings":"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","file":"vendor.87540c23.js","sourcesContent":["/*global svg4everybody*/\nsvg4everybody();\n","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: {{ version }}\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t};\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width') || context.canvas.width;\n\t\tvar height = this.height = computeDimension(context.canvas,'Height') || context.canvas.height;\n\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title template\n\t\t\ttooltipTitleTemplate: \"<%= label%>\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= datasetLabel %>: <%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Array - A list of colors to use as the defaults\n\t\t\tsegmentColorDefault: [\"#A6CEE3\", \"#1F78B4\", \"#B2DF8A\", \"#33A02C\", \"#FB9A99\", \"#E31A1C\", \"#FDBF6F\", \"#FF7F00\", \"#CAB2D6\", \"#6A3D9A\", \"#B4B482\", \"#B15928\" ],\n\n\t\t\t// Array - A list of highlight colors to use as the defaults\n\t\t\tsegmentHighlightColorDefaults: [ \"#CEF6FF\", \"#47A0DC\", \"#DAFFB2\", \"#5BC854\", \"#FFC2C1\", \"#FF4244\", \"#FFE797\", \"#FFA728\", \"#F2DAFE\", \"#9265C2\", \"#DCDCAA\", \"#D98150\" ],\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)){\n\t\t\t\t\tobjClone[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)){\n\t\t\t\t\t\tbase[key] = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn === \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define === 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\tvar s = num.toString();\n\t\t\t\tif(s.indexOf(\"e-\") < 0){\n\t\t\t\t\t// no exponent, e.g. 0.01\n\t\t\t\t\treturn s.split(\".\")[1].length;\n\t\t\t\t}\n\t\t\t\telse if(s.indexOf(\".\") < 0) {\n\t\t\t\t\t// no decimal point, e.g. 1e-9\n\t\t\t\t\treturn parseInt(s.split(\"e-\")[1]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// exponent and decimal point, e.g. 1.23e-9\n\t\t\t\t\tvar parts = s.split(\".\")[1].split(\"e-\");\n\t\t\t\t\treturn parts[0].length + parseInt(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\t// Filter out null values since these would min() to zero\n\t\t\tvar values = [];\n\t\t\teach(valuesArray, function( v ){\n\t\t\t\tv == null || values.push( v );\n\t\t\t});\n\t\t\tvar minValue = min(values),\n\t\t\t    maxValue = max(values);\n\n\t\t\t// We need some degree of separation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (templateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (t === 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1){\n\t\t\t\t\treturn t;\n\t\t\t\t}\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1) == 1){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * 0.3;\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else{\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0){\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif ((t /= 1 / 2) == 2){\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (!p){\n\t\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t\t}\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else {\n\t\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\t}\n\t\t\t\tif (t < 1){\n\t\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));}\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1){\n\t\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\t}\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2){\n\t\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\t}\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-left')) + parseInt(getStyle(container, 'padding-right'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientWidth - padding : 0;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode,\n\t\t\t    padding = parseInt(getStyle(container, 'padding-bottom')) + parseInt(getStyle(container, 'padding-top'));\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container ? container.clientHeight - padding : 0;\n\t\t},\n\t\tgetStyle = helpers.getStyle = function (el, property) {\n\t\t\treturn el.currentStyle ?\n\t\t\t\tel.currentStyle[property] :\n\t\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\t\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = this.options.animationSteps;\n\t\t\t\tanimation.easing = this.options.animationEasing;\n\t\t\t\t\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\t\t\t\t\t\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = this.options.onAnimationProgress;\n\t\t\t\tanimation.onAnimationComplete = this.options.onAnimationComplete;\n\t\t\t\t\n\t\t\t\tChart.animationService.addAnimation(this, animation);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn helpers.template(this.options.legendTemplate, this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.stop();\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: template(this.options.tooltipTitleTemplate,ChartElements[0]),\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t// Normalize all angles to 0 - 2*PI (0 - 360°)\n\t\t\tvar pointRelativeAngle = pointRelativePosition.angle % (Math.PI * 2),\n\t\t\t    startAngle = (Math.PI * 2 + this.startAngle) % (Math.PI * 2),\n\t\t\t    endAngle = (Math.PI * 2 + this.endAngle) % (Math.PI * 2) || 360;\n\n\t\t\t// Calculate wether the pointRelativeAngle is between the start and the end angle\n\t\t\tvar betweenAngles = (endAngle < startAngle) ?\n\t\t\t\tpointRelativeAngle <= endAngle || pointRelativeAngle >= startAngle:\n\t\t\t\tpointRelativeAngle >= startAngle && pointRelativeAngle <= endAngle;\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar withinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius < 0 ? 0 : this.outerRadius, this.startAngle, this.endAngle);\n\n            ctx.arc(this.x, this.y, this.innerRadius < 0 ? 0 : this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: \"\", // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\t\t\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation \n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\t\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.titleHeight = this.title ? this.titleFontSize * 1.5 : 0;\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleHeight;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleHeight / 3;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize * 1.5 * afterTitleIndex) + this.fontSize / 2) + this.titleHeight;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) + 10 : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting endpoint, excluding the space for x labels\n\t\t\tvar cachedEndPoint = this.endPoint;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.endPoint = cachedEndPoint;\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth) ? firstWidth/2 : this.yLabelWidth;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tvar centerOffset = null, outerPosition = null;\n\n\t\t\t\t\t\tif (this.angleLineWidth > 0 && (i % this.angleLineInterval === 0)){\n\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.backgroundColors && this.backgroundColors.length == this.valuesCount) {\n\t\t\t\t\t\t\tif (centerOffset == null)\n\t\t\t\t\t\t\t\tcenterOffset = this.calculateCenterOffset(this.max);\n\n\t\t\t\t\t\t\tif (outerPosition == null)\n\t\t\t\t\t\t\t\touterPosition = this.getPointPosition(i, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterPosition = this.getPointPosition(i === 0 ? this.valuesCount - 1 : i - 1, centerOffset);\n\t\t\t\t\t\t\tvar nextOuterPosition = this.getPointPosition(i === this.valuesCount - 1 ? 0 : i + 1, centerOffset);\n\n\t\t\t\t\t\t\tvar previousOuterHalfway = { x: (previousOuterPosition.x + outerPosition.x) / 2, y: (previousOuterPosition.y + outerPosition.y) / 2 };\n\t\t\t\t\t\t\tvar nextOuterHalfway = { x: (outerPosition.x + nextOuterPosition.x) / 2, y: (outerPosition.y + nextOuterPosition.y) / 2 };\n\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(previousOuterHalfway.x, previousOuterHalfway.y);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.lineTo(nextOuterHalfway.x, nextOuterHalfway.y);\n\t\t\t\t\t\t\tctx.fillStyle = this.backgroundColors[i];\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\taddAnimation: function(chartInstance, animationObject) {\n\t\t\tfor (var index = 0; index < this.animations.length; ++ index){\n\t\t\t\tif (this.animations[index].chartInstance === chartInstance){\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tthis.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (this.animations.length == 1) {\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findNextWhere(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\t\t\t\n\t\t\tif (index)\n\t\t\t{\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\t// calls startDigest with the proper context\n\t\tdigestWrapper: function() {\n\t\t\tChart.animationService.startDigest.call(Chart.animationService);\n\t\t},\n\t\tstartDigest: function() {\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif(this.dropFrames > 1){\n\t\t\t\tframesToDrop = Math.floor(this.dropFrames);\n\t\t\t\tthis.dropFrames -= framesToDrop;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.animations.length; i++) {\n\n\t\t\t\tif (this.animations[i].animationObject.currentStep === null){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\t\t\t\tif(this.animations[i].animationObject.currentStep > this.animations[i].animationObject.numSteps){\n\t\t\t\t\tthis.animations[i].animationObject.currentStep = this.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.animations[i].animationObject.render(this.animations[i].chartInstance, this.animations[i].animationObject);\n\t\t\t\t\n\t\t\t\t// Check if executed the last frame.\n\t\t\t\tif (this.animations[i].animationObject.currentStep == this.animations[i].animationObject.numSteps){\n\t\t\t\t\t// Call onAnimationComplete\n\t\t\t\t\tthis.animations[i].animationObject.onAnimationComplete.call(this.animations[i].chartInstance);\n\t\t\t\t\t// Remove the animation.\n\t\t\t\t\tthis.animations.splice(i, 1);\n\t\t\t\t\t// Keep the index in place to offset the splice\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar delay = endTime - startTime - this.frameDuration;\n\t\t\tvar frameDelay = delay / this.frameDuration;\n\n\t\t\tif(frameDelay > 1){\n\t\t\t\tthis.dropFrames += frameDelay;\n\t\t\t}\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (this.animations.length > 0){\n\t\t\t\thelpers.requestAnimFrame.call(window, this.digestWrapper);\n\t\t\t}\n\t\t}\n\t};\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine('Chart', [], function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n","(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//Number - Interval at which to draw angle lines (\"every Nth point\")\n\t\t\tangleLineInterval: 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span class=\\\"<%=name.toLowerCase()%>-legend-icon\\\" style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><span class=\\\"<%=name.toLowerCase()%>-legend-text\\\"><%if(datasets[i].label){%><%=datasets[i].label%><%}%></span></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackgroundColors: this.options.scaleBackgroundColors,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n        angleLineInterval: (this.options.angleLineInterval) ? this.options.angleLineInterval : 1,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tdatasetLabel: this.datasets[datasetIndex].label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tif(this.options.datasetFill){\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n","'use strict';\n(function () {\n\n  var options = {\n    // Global defaults:\n    animation: false,\n\n    scaleOverride   : true,\n    scaleSteps      : 10,\n    scaleStepWidth  : 10,\n    scaleStartValue : 0,\n    scaleBeginAtZero: 0,\n\n    scaleLineColor : '#374140',\n    scaleFontFamily: '\"proxima-nova\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    scaleFontColor : '#d9cb9e',\n\n    responsive: true,\n\n    tooltipFillColor : '#2a2c2b',\n    tooltipFontFamily: '\"proxima-nova\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    tooltipFontColor : '#d9cb9e',\n\n    // Radar chart defaults:\n    angleLineColor      : '#374140',\n    pointLabelFontFamily: '\"proxima-nova\", \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n    pointLabelFontColor : '#d9cb9e',\n  };\n\n  var barCharts = document.querySelectorAll('.js-bar-chart');\n\n  Array.prototype.forEach.call(barCharts, function (chart) {\n\n    var skill = chart.getAttribute('data-label');\n    var bars = chart.querySelectorAll('.js-bar-chart__bar');\n    var labels = [];\n    var values = [];\n\n    Array.prototype.forEach.call(bars, function (bar) {\n      labels.push(bar.textContent);\n      values.push(bar.getAttribute('aria-valuenow'));\n    });\n\n    var context = document.getElementById('skills__chart--' + skill).getContext('2d');\n    var data = {\n      labels  : labels,\n      datasets: [{\n        label: skill,\n        data : values,\n\n        fillColor  : 'rgba(217,203,158,0.2)',\n        strokeColor: '#d9cb9e',\n\n        pointColor      : '#d9cb9e',\n        pointStrokeColor: '#d9cb9e',\n\n        pointHighlightFill  : '#db3522',\n        pointHighlightStroke: '#db3522',\n      }],\n    };\n\n    // Skills radar charts\n    /*global Chart:true*/\n    new Chart(context).Radar(data, options);\n  });\n\n})();\n"]}